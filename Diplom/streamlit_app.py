import streamlit as st
import requests
import pandas as pd

st.title("üîç Phishing Website Detector")
st.markdown("""
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –Ω–∞ —Ñ–∏—à–∏–Ω–≥ —Å –ø–æ–º–æ—â—å—é ML –º–æ–¥–µ–ª–µ–π
""")

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
try:
    models = requests.get("http://localhost:8000/models").json()["available_models"]
    model_type = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:", models)
except:
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –º–æ–¥–µ–ª–µ–π")
    st.stop()

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
with st.form("prediction_form"):
    st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã URL")
    
    col1, col2 = st.columns(2)
    
    with col1:
        url_length = st.number_input("–î–ª–∏–Ω–∞ URL", min_value=0, value=100)
        url_depth = st.number_input("–ì–ª—É–±–∏–Ω–∞ URL", min_value=0, value=3)
        has_ip = st.selectbox("–°–æ–¥–µ—Ä–∂–∏—Ç IP", [0, 1], format_func=lambda x: "–î–∞" if x else "–ù–µ—Ç")
    
    with col2:
        has_at = st.selectbox("–°–æ–¥–µ—Ä–∂–∏—Ç '@'", [0, 1], format_func=lambda x: "–î–∞" if x else "–ù–µ—Ç")
        https = st.selectbox("HTTPS", [0, 1], format_func=lambda x: "–î–∞" if x else "–ù–µ—Ç")
        web_traffic = st.slider("–£—Ä–æ–≤–µ–Ω—å —Ç—Ä–∞—Ñ–∏–∫–∞", 0, 100, 50)
    
    submitted = st.form_submit_button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")

if submitted:
    features = [
        url_length, url_depth, has_ip, has_at, 
        https, web_traffic, 0, 0, 0, 0  # –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
    ]
    
    try:
        response = requests.post(
            "http://localhost:8000/predict",
            json={"features": features, "model_type": model_type}
        )
        
        if response.status_code == 200:
            result = response.json()
            if result["is_phishing"]:
                st.error("‚ö†Ô∏è –§–∏—à–∏–Ω–≥–æ–≤—ã–π —Å–∞–π—Ç!")
            else:
                st.success("‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∞–π—Ç")
        else:
            st.error(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")